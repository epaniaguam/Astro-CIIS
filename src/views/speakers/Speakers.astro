---
import CardSpeakers from "./components/CardSpeakers.astro";
import {
  FlagArgentina,
  FlagBolivia,
  FlagBrazil,
  FlagChile,
  FlagCuba,
  FlagPeru,
  FlagSouthKorea,
} from "../../../public/icons/flags/index.astro";
import useSpeakers from "./services/useSpeaker";
import type Speakers from "./adapters/speakers";
import type Speaker from "./adapters/speakers";

const speakers: Speakers[] | undefined = await useSpeakers();
---

<section id="speakers" class="pt-40 sm:pt-48 pb-32">
  <div class="m-auto max-w-5xl pb-16">
    <h2 class="text-4xl font-bold text-center text-secondary sm:text-6xl slide-top">
      Conoce a nuestros<span class="text-primary"> Ponentes</span>
    </h2>
    <p class=" block mx-auto text-lg text-center text-white mt-4">
      Más ponentes serán anunciados próximamente
    </p>    
  </div>
  <div
    class="m-auto max-w-5xl grid gap-y-8 grid-cols-1 lg:grid-cols-3 sm:grid-cols-2"
  >
    {
      speakers?.map((speaker: Speaker) => (
        <CardSpeakers
          nameSpeaker={`${speaker.degree} ${speaker.name} ${speaker.lastname}`}
          rolSpeaker={speaker.description}
          alt={`Imagen del ponente ${speaker.degree} ${speaker.name} ${speaker.lastname}`}
          link_image={`${import.meta.env.DOMAIN_BASE}/${speaker.avatar}`}
        >
          {speaker.nationality === "Chile" && <FlagChile slot="icon" />}
          {speaker.nationality === "Peru" && <FlagPeru slot="icon" />}
          {speaker.nationality === "Corea del Sur" && (
            <FlagSouthKorea slot="icon" />
          )}
          {speaker.nationality === "Bolivia" && <FlagBolivia slot="icon" />}
          {speaker.nationality === "Argentina" && <FlagArgentina slot="icon" />}
          {speaker.nationality === "Brasil" && <FlagBrazil slot="icon" />}
          {speaker.nationality === "Cuba" && <FlagCuba slot="icon" />}
        </CardSpeakers>
      ))
    }
  </div>
</section>

<style>
  .text-primary {
    background-image: var(--accent-gradient-primary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .text-secondary {
    background-image: var(--accent-gradient-secondary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }

  .slide-top {
    animation: slide-top both;
    animation-timeline: view();
    animation-range-start: cover 0%;
    animation-range-end: contain 40%;
    animation-duration: 0.5s;
    animation-timing-function: cubic-bezier(0.250, 0.460, 0.450, 0.940);
}

  @keyframes slide-top {
    0% {
        -webkit-transform: translateY(-100px);
        transform: translateY(-100px);
        opacity: 0;
    }
    100% {
      -webkit-transform: translateY(0);
      transform: translateY(0);
      opacity: 1;
    }
  }
</style>